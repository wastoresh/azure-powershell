// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Storage.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Dual-stack endpoint preference defines the type of network, either
    /// dualstack/ipv4/ipv6 endpoints are going to be published.
    /// </summary>
    public partial class DualStackEndpointPreference
    {
        /// <summary>
        /// Initializes a new instance of the DualStackEndpointPreference
        /// class.
        /// </summary>
        public DualStackEndpointPreference()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DualStackEndpointPreference
        /// class.
        /// </summary>
        /// <param name="defaultDualStackEndpoints">A boolean flag which
        /// indicates whether dual-stack storage endpoints are to be
        /// published.</param>
        /// <param name="publishIpv4Endpoint">A boolean flag which indicates
        /// whether IPv4 storage endpoints are to be published.</param>
        /// <param name="publishIpv6Endpoint">A boolean flag which indicates
        /// whether IPv6 storage endpoints are to be published.</param>
        public DualStackEndpointPreference(bool? defaultDualStackEndpoints = default(bool?), bool? publishIpv4Endpoint = default(bool?), bool? publishIpv6Endpoint = default(bool?))
        {
            DefaultDualStackEndpoints = defaultDualStackEndpoints;
            PublishIpv4Endpoint = publishIpv4Endpoint;
            PublishIpv6Endpoint = publishIpv6Endpoint;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a boolean flag which indicates whether dual-stack
        /// storage endpoints are to be published.
        /// </summary>
        [JsonProperty(PropertyName = "defaultDualStackEndpoints")]
        public bool? DefaultDualStackEndpoints { get; set; }

        /// <summary>
        /// Gets or sets a boolean flag which indicates whether IPv4 storage
        /// endpoints are to be published.
        /// </summary>
        [JsonProperty(PropertyName = "publishIpv4Endpoint")]
        public bool? PublishIpv4Endpoint { get; set; }

        /// <summary>
        /// Gets or sets a boolean flag which indicates whether IPv6 storage
        /// endpoints are to be published.
        /// </summary>
        [JsonProperty(PropertyName = "publishIpv6Endpoint")]
        public bool? PublishIpv6Endpoint { get; set; }

    }
}
